/**
 * SCSS Loop generates CSS classes to assign colors to elements in you project
 * @usage Add CSS class to HTML element like so: "text-{color}"
 * @usage Where {color} represents a mapped key-value in theme-colors
 * @returns CSS Class for adding/overriding color values
 * @uses Only color added to the theme-colors mapping in _variables.scss
 * @accepts text, backgrounds, borders, SVG Path's Fills and Buttons
 * @see Color must be added as a variable and mppped in `abstracts/variables.scss`
 * @see variables.scss for color variables and theme-colors mapping
 *
 * @todo Extend as needed. Cool things to include could be:
 * Icons, Table Elements, Form Element..
*/

@each $key, $value in $theme-colors {
  .text-#{$key} {
    color: $value !important;
  }

  .bg-#{$key} {
    background-color: $value !important;
  }

  .border-color-#{$key} {
    border-color: $value !important;
  }

  .fill-#{$key} {
    fill: $value !important;
  }

  .button {
    &--#{$key} {
      background-color: $value;
      border-color: $value;

      &:hover {
        background-color: darken($value, 10%);
        border-color: darken($value, 10%);
      }

      // color of focus outline
      &:focus::before {
        border-color: $value;
      }

      &.button {
        &--hov {
          &-lighten {
            &:hover {
              background-color: lighten($value, 10%);
              border-color: lighten($value, 10%);
            }
          }
        }

        &--outline {
          background-color: transparent;
          color: $value;

          .ui-icon {
            path {
              fill: $value;
            }
          }

          &:hover {
            border-color: $value;
            background-color: $value;
            color: $white;

            .ui-icon {

              /* stylelint-disable-next-line */
              path {
                fill: $white;
              }
            }
          }

          &-reverse {
            background-color: $value;
            color: $white;

            &:hover {
              background-color: transparent;
              color: $value;
            }
          }
        }
      }
    }

    &--with-icon-#{$key} {
      .ui-icon {
        path {
          fill: $value;
        }
      }
    }
  }
}
